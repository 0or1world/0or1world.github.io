{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "title": "shijie\u7684\u6280\u672f\u8bb0\u5f55", "subTitle": "\u6280\u672f\u5206\u6790\u4e0e\u8bb0\u5f55", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/hive-yu-ju-da-quan.html", "labels": ["documentation"], "postTitle": "hive\u8bed\u53e5\u5927\u5168", "postUrl": "post/hive-yu-ju-da-quan.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/1", "commentNum": 0, "wordCount": 19413, "description": "hive\u6570\u636e\u5e93\u662fhdfs\u4e0a\u7684\u6587\u4ef6\u5939\uff0c\u8868\u4e5f\u662f\u6587\u4ef6\u5939\uff0c\u8868\u91cc\u7684\u6570\u636e\u662f\u6587\u4ef6\r\nhive\u5efa\u8868\r\ncreate table t_student(id string,name string,age int,classNo string)\r\nrow format delimited\r\nfields terminated by ',';\r\n\r\n\u521b\u5efa\u5916\u90e8\u8868\r\ncreate external table t_a(id string,name string)\r\nrow format delimited\r\nfields terminated by ','\r\nlocation '/.../...'\r\n\u5916\u90e8\u8868\u548c\u5185\u90e8\u8868\u7684\u533a\u522b\uff0cdrop\u65f6\u5185\u90e8\u8868\u7684hdfs\u6570\u636e\u4e00\u540c\u5220\u9664\uff0c\u5916\u90e8\u8868\u7684hdfs\u4e0a\u7684\u6570\u636e\u4e0d\u5220\u9664\r\n\r\ncreate table t_b(id string,name string)\r\nrow format delimited\r\nfields terminated by ','\r\n\r\ncreate table t_a(id string,name string)\r\nrow format delimited\r\nfields terminated by ','\r\n\r\n--\u52a0\u8f7d\u6570\u636e\u4ecehdfs\u4e0a\u52a0\u8f7d\r\nload data inpath '/dataB/b.txt' into table t_a;\r\n--\u52a0\u8f7d\u6570\u636e\u4ece\u672c\u5730\u4e0a\u52a0\u8f7d\r\nload data local inpath '/root/bb.txt' into table t_b;\r\n\r\nt_a\r\n+---------+-----------+--+\r\n| t_a.id | t_a.name |\r\n+---------+-----------+--+\r\n| a | 1 |\r\n| b | 2 |\r\n| c | 4 |\r\n| d | 5 |\r\n+---------+-----------+--+\r\n\r\nt_b\r\n+---------+-----------+--+\r\n| t_b.id | t_b.name |\r\n+---------+-----------+--+\r\n| a | xx |\r\n| b | yy |\r\n| d | zz |\r\n| e | pp |\r\n+---------+-----------+--+\r\n\r\n--\u7b1b\u5361\u5c14\u79ef\r\nselect a.,b.\r\nfrom t_a inner join t_b\r\n\r\n+---------+-----------+---------+-----------+--+\r\n| t_a.id | t_a.name | t_b.id | t_b.name |\r\n+---------+-----------+---------+-----------+--+\r\n| a | 1 | a | xx |\r\n| b | 2 | a | xx |\r\n| c | 4 | a | xx |\r\n| d | 5 | a | xx |\r\n| a | 1 | b | yy |\r\n| b | 2 | b | yy |\r\n| c | 4 | b | yy |\r\n| d | 5 | b | yy |\r\n| a | 1 | d | zz |\r\n| b | 2 | d | zz |\r\n| c | 4 | d | zz |\r\n| d | 5 | d | zz |\r\n| a | 1 | e | pp |\r\n| b | 2 | e | pp |\r\n| c | 4 | e | pp |\r\n| d | 5 | e | pp |\r\n+---------+-----------+---------+-----------+--+\r\n\r\n--\u5185\u8fde\u63a5\r\nselect * from t_a join t_b where t_a.id = t_b.id;\r\nselect * from t_a join t_b on t_a.id = t_b.id;\r\n\r\n--\u5de6\u5916\u8fde\u63a5\r\nselect\r\na.,b.\r\nfrom t_a a left join t_b b\r\n\r\nselect\r\na.,b.\r\nfrom t_a a left join t_b b on a.id = b.id\r\n\r\n+-------+---------+-------+---------+--+\r\n| a.id | a.name | b.id | b.name |\r\n+-------+---------+-------+---------+--+\r\n| a | 1 | a | xx |\r\n| b | 2 | b | yy |\r\n| d | 5 | d | zz |\r\n| NULL | NULL | e | pp |\r\n+-------+---------+-------+---------+--+\r\n\r\n--\u53f3\u5916\u8fde\u63a5\r\nselect\r\na.,b.\r\nfrom t_a a right outer join t_b b\r\n\r\nselect\r\na.,b.\r\nfrom t_a a right outer join t_b b on a.id = b.id\r\n+-------+---------+-------+---------+--+\r\n| a.id | a.name | b.id | b.name |\r\n+-------+---------+-------+---------+--+\r\n| a | 1 | a | xx |\r\n| b | 2 | b | yy |\r\n| d | 5 | d | zz |\r\n| NULL | NULL | e | pp |\r\n+-------+---------+-------+---------+--+\r\n\r\n--\u5168\u5916\u8fde\u63a5\r\nselect\r\na.,b.\r\nfrom t_a a full outer join t_b b on a.id = b.id\r\n\r\n+-------+---------+-------+---------+--+\r\n| a.id | a.name | b.id | b.name |\r\n+-------+---------+-------+---------+--+\r\n| a | 1 | a | xx |\r\n| b | 2 | b | yy |\r\n| c | 4 | NULL | NULL |\r\n| d | 5 | d | zz |\r\n| NULL | NULL | e | pp |\r\n+-------+---------+-------+---------+--+\r\n\r\n--\u5de6\u534a\u8fde\u63a5 \u76f8\u5f53\u4e8e\u6307\u5b9a\u6761\u4ef6\u7684\u5185\u8fde\u63a5\uff0c\u4f46\u662f\u53ea\u663e\u793a\u5de6\u8fb9\u7684\u8868\u6570\u636e\r\nselect\r\na.*\r\nfrom t_a a left semi join t_b b on a.id = b.id\r\n\r\n+-------+---------+--+\r\n| a.id | a.name |\r\n+-------+---------+--+\r\n| a | 1 |\r\n| b | 2 |\r\n| d | 5 |\r\n+-------+---------+--+\r\n\r\n--\u4f8b\u5982\u6709\u8fd9\u4e9b\u6570\u636e\r\nvi access.log.0804\r\n192.168.33.3,http://www.sina.com/stu,2017-08-04 15:30:20\r\n192.168.33.3,http://www.sina.com/teach,2017-08-04 15:35:20\r\n192.168.33.4,http://www.sina.com/stu,2017-08-04 15:30:20\r\n192.168.33.4,http://www.sina.com/job,2017-08-04 16:30:20\r\n192.168.33.5,http://www.sina.com/job,2017-08-04 15:40:20\r\n\r\nvi access.log.0805\r\n192.168.33.3,http://www.sina.com/stu,2017-08-05 15:30:20\r\n192.168.44.3,http://www.sina.com/teach,2017-08-05 15:35:20\r\n192.168.33.44,http://www.sina.com/stu,2017-08-05 15:30:20\r\n192.168.33.46,http://www.sina.com/job,2017-08-05 16:30:20\r\n192.168.33.55,http://www.sina.com/job,2017-08-05 15:40:20\r\n\r\nvi access.log.0806\r\n192.168.133.3,http://www.sina.com/register,2017-08-06 15:30:20\r\n192.168.111.3,http://www.sina.com/register,2017-08-06 15:35:20\r\n192.168.34.44,http://www.sina.com/pay,2017-08-06 15:30:20\r\n192.168.33.46,http://www.sina.com/excersize,2017-08-06 16:30:20\r\n192.168.33.55,http://www.sina.com/job,2017-08-06 15:40:20\r\n192.168.33.46,http://www.sina.com/excersize,2017-08-06 16:30:20\r\n192.168.33.25,http://www.sina.com/job,2017-08-06 15:40:20\r\n192.168.33.36,http://www.sina.com/excersize,2017-08-06 16:30:20\r\n192.168.33.55,http://www.sina.com/job,2017-08-06 15:40:20\r\n\r\n--\u5efa\u5206\u533a\u8868\r\ncreate table t_access(ip string,url string,access_time string)\r\npartitioned by (day string)\r\nrow format delimited\r\nfields terminated by ','\r\n\r\n--\u5bfc\u5165\u5206\u533a\u8868\u6570\u636e\r\nload data local inpath '/root/access.log.0806' into table t_access partition(day='2017-08-06');\r\n\r\n--\u67e5\u770b\u5f53\u524d\u5206\u533a\u60c5\u51b5\r\nshow partitions t_access;\r\n\r\n--\u6c42\u6bcf\u6761url\u8bbf\u95ee\u7684\u6b21\u6570\r\nselect\r\nurl,count(1)\r\nfrom t_access\r\ngroup by url;\r\n\r\n--\u6c42\u6bcf\u6761url\u8bbf\u95ee\u7684ip\u4e2d\uff0c\u6700\u5927\u7684ip\u662f\u54ea\u4e2a\r\nselect\r\nurl,max(ip)\r\nfrom t_access\r\ngroup by url;\r\n\r\n--\u6c42\u6bcf\u4e2aip\u8bbf\u95ee\u540c\u4e00\u4e2a\u9875\u9762\u7684\u8bb0\u5f55\u4e2d\uff0c\u6700\u665a\u7684\u4e00\u6761\r\nselect\r\nip,url,max(access_time)\r\nfrom t_access\r\ngroup by ip,url\r\n\r\n--\u6c42PV\r\nselect\r\nurl,count(1)\r\nfrom t_access\r\ngroup by url\r\n\r\n+--------------------------------+------+--+\r\n| url | _c1 |\r\n+--------------------------------+------+--+\r\n| http://www.sina.com/excersize | 3 |\r\n| http://www.sina.com/job | 7 |\r\n| http://www.sina.com/pay | 1 |\r\n| http://www.sina.com/register | 2 |\r\n| http://www.sina.com/stu | 4 |\r\n| http://www.sina.com/teach | 2 |\r\n+--------------------------------+------+--+\r\n\r\n--\u6c42UV\r\nselect\r\nurl,count(distinct(ip))\r\nfrom t_access\r\ngroup by url\r\n\r\n+--------------------------------+-----+--+\r\n| url | c1 |\r\n+--------------------------------+-----+--+\r\n| http://www.sina.com/excersize | 2 |\r\n| http://www.sina.com/job | 5 |\r\n| http://www.sina.com/pay | 1 |\r\n| http://www.sina.com/register | 2 |\r\n| http://www.sina.com/stu | 3 |\r\n| http://www.sina.com/teach | 2 |\r\n+--------------------------------+-----+--+\r\n\r\n--\u6c42\u6bcf\u6761url\u8bbf\u95ee\u7684ip\u4e2d\uff0c\u6700\u5927\u7684ip\u662f\u54ea\u4e2a\r\n--PV\r\n--UV\r\n--\u7528mapreduce\u5b9e\u73b0\r\n\r\n--\u6c428\u67086\u53f7pv\uff0cuv\r\nselect\r\ncount(1),url\r\nfrom t_access\r\nwhere day = '2017-08-06'\r\ngroup by url\r\n\r\n--\u6c428\u67084\u53f7\u4ee5\u540e\uff0c\u6bcf\u5929\u8bbf\u95eehttp://www.sina.com/job \u7684\u6b21\u6570\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8005\u4e2dip\u6700\u5927\u7684\r\nselect\r\ncount(1),max(ip),day\r\nfrom t_access\r\nwhere day > '2017-08-04'\r\nand url = 'http://www.sina.com/job'\r\ngroup by day\r\n\r\nselect\r\ncount(1),max(ip),day\r\nfrom t_access\r\nwhere url = 'http://www.sina.com/job'\r\ngroup by day having day > '2017-08-04'\r\n\r\n--\u6c428\u67084\u53f7\u4ee5\u540e\uff0c\u6bcf\u5929\u6bcf\u4e2a\u9875\u9762\u8bbf\u95ee\u603b\u6b21\u6570\uff0c\u4ee5\u53ca\u9875\u9762\u6700\u5927\u7684ip\uff0c\u5e76\u4e14\u4e0a\u8ff0\u67e5\u8be2\u7ed3\u679c\u4e2d\u8bbf\u95ee\u6b21\u6570\u5927\u4e8e2\u7684\r\nselect tmp.* from\r\n(select\r\nurl,day,count(1) cnts,max(ip) ip\r\nfrom t_access\r\ngroup by day,url having day > '2017-08-04') tmp\r\nwhere tmp.cnts > 2\r\n\r\n--\u6bcf\u5929\uff0cpv\u6392\u5e8f\r\nselect\r\nurl,day,count(1) cnts\r\nfrom t_access\r\ngroup by day,url\r\norder by cnts desc\r\n\r\n--hive\u91cc\u7684order by\u662f\u5168\u5c40\u6392\u5e8f\r\n--sort by\u662f\u5728map\u91cc\u8fdb\u884c\u6392\u5e8f\r\n\r\nselect\r\ntmp.*\r\nfrom\r\n(select\r\nurl,day,count(1) cnts\r\nfrom t_access\r\ngroup by day,url) tmp\r\ndistribute by tmp.day sort by tmp.cnts desc\r\n\r\n--\u6709\u5982\u4e0b\u6570\u636e\r\n+-------------+---------------+--+\r\n| t_sale.mid | t_sale.money |\r\n+-------------+---------------+--+\r\n| AA | 15.0 |\r\n| AA | 20.0 |\r\n| BB | 22.0 |\r\n| CC | 44.0 |\r\n+-------------+---------------+--+\r\n\r\n--distribute by\u5148\u628a\u6570\u636e\u5206\u53d1\u5230\u5404\u4e2areduce\u4e2d\uff0c\u7136\u540esort by\u5728\u5404\u4e2areduce\u4e2d\u8fdb\u884c\u5c40\u90e8\u6392\u5e8f\r\nselect\r\nmid,money\r\nfrom t_sale\r\ndistribute by mid sort by money desc\r\n\r\n+------+--------+--+\r\n| mid | money |\r\n+------+--------+--+\r\n| AA | 15.0 |\r\n| AA | 20.0 |\r\n| BB | 22.0 |\r\n| CC | 44.0 |\r\n+------+--------+--+\r\n\r\n--cluster by mid \u7b49\u4e8e distribute by mid sort by mid\r\n--cluster by\u540e\u9762\u4e0d\u80fd\u8ddfdesc\uff0casc\uff0c\u9ed8\u8ba4\u7684\u53ea\u80fd\u5347\u5e8f\r\n\r\n--order by \u662f\u5168\u6392\u5e8f\uff0c\u6240\u6709\u7684\u6570\u636e\u4f1a\u53d1\u9001\u7ed9\u4e00\u4e2areduceTask\u8fdb\u884c\u5904\u7406\uff0c\u5728\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\uff0creduce\u5c31\u4f1a\u8d85\u8d1f\u8377\r\nselect\r\nmid,money\r\nfrom t_sale\r\norder by money desc\r\n\r\n--\u8bbe\u7f6e\u6700\u5927\u7684reduce\u542f\u52a8\u4e2a\u6570\r\nset hive.exec.reducers.max=10;\r\n--\u8bbe\u7f6ereduce\u7684\u542f\u52a8\u4e2a\u6570\r\nset mapreduce.job.reduce=3\r\n\r\n--hive\u6570\u636e\u7c7b\u578b\r\n--\u6570\u5b57\u7c7b\u578b\r\ntinyint 1byte -128\u5230127\r\nsmallint 2byte -32768\u523032767 char\r\nint\r\nbigint\r\nfloat\r\ndouble\r\n\r\n--\u65e5\u671f\u7c7b\u578b\r\ntimestamp\r\ndate\r\n\r\n--\u5b57\u7b26\u4e32\u7c7b\u578b\r\nstring\r\nvarchar\r\nchar\r\n\r\n--\u6df7\u6742\u7c7b\u578b\r\nboolean\r\nbinary \u4e8c\u8fdb\u5236\r\n\r\n--\u590d\u5408\u7c7b\u578b\r\n--\u6570\u7ec4\r\n\r\n\u6d41\u6d6a\u5730\u7403,\u5434\u4eac:\u5434\u5b5f\u8fbe:\u5f20\u98de:\u8d75\u4e91,2019-09-11\r\n\u6211\u548c\u6211\u7684\u7956\u56fd,\u845b\u4f18:\u9ec4\u6e24:\u5b8b\u4f73:\u5434\u4eac,2019-10-01\r\n\r\ncreate table t_movie(movie_name string,actors array<string>,show_time date)\r\nrow format delimited fields terminated by ','\r\ncollection items terminated by ':';\r\n\r\narray_contains\r\n\r\nselect\r\n\r\nfrom t_movie\r\nwhere array_contains(actors,'\u5f20\u98de')\r\n\r\nsize\r\n\r\nselect\r\nmovie_name,actors,show_time,size(actors) num\r\nfrom t_movie\r\n\r\n========================================\r\n\r\nmap\u7c7b\u578b\r\n1,zhangsan,father:xiaoming#mother:chentianxing#brother:shaoshuai,28\r\n2,xiaoming,father:xiaoyun#mother:xiaohong#sister:xiaoyue#wife:chentianxing,30\r\n\r\ncreate table t_user(id int,name string,family map<string,string>,jage int)\r\nrow format delimited fields terminated by ','\r\ncollection items terminated by '#'\r\nmap keys terminated by ':';\r\n\r\nmap_keys\r\nselect\r\nid,name,map_keys(family) as relation,jage\r\nfrom t_user;\r\n\r\nmap_values\r\nselect\r\nid,name,map_values(family) as relation,jage\r\nfrom t_user;\r\n\r\n--\u5bb6\u5ead\u6210\u5458\u6570\u91cf\r\nselect\r\nid,name,size(family),jage\r\nfrom t_user\r\n\r\n--\u6709\u5144\u5f1f\u7684\u4eba\r\nselect\r\n\r\nfrom t_user\r\nwhere array_contains(map_keys(family),'brother')\r\n\r\n========================================\r\n1,zhangsan,18:man:beijing\r\n2,lisi,22:woman:shanghai\r\n\r\ncreate table t_people(id int,name string,info struct<age:int,sex:string,addr:string>)\r\nrow format delimited fields terminated by ','\r\ncollection items terminated by ':';\r\n\r\nselect\r\nid,name,info.age\r\nfrom t_people;\r\n\r\n========================================\r\n\r\n192,168,33,66,zhangsan,male\r\n192,168,33,77,lisi,male\r\n192,168,43,101,wangwu,female\r\n\r\ncreate table t_people_ip(ip_seg1 string,ip_seg2 string,ip_seg3 string,ip_seg4 string,name string,sex string)\r\nrow format delimited fields terminated by ',';\r\n\r\n--\u5b57\u7b26\u4e32\u62fc\u63a5\u51fd\u6570\r\nconcat\r\nselect concat('abc','def')\r\n\r\nconcat_ws\r\nselect concat_ws('.',ip_seg1,ip_seg2,ip_seg3,ip_seg4),name,sex from t_people_ip\r\n\r\n===================================================================\r\n\r\n--\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6\r\nlength\r\nselect lenth('jsdfijsdkfjkdsfjkdf');\r\n\r\n========================================\r\n\r\nselect to_date('2019-09-11 16:55:11');\r\n\r\n--\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210unix\u65f6\u95f4\u6233\r\nselect unix_timestamp('2019-09-11 11:55:11','yyyy-MM-dd HH:mm:ss');\r\n\r\n--\u628aunix\u65f6\u95f4\u6233\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\r\nselect from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss');\r\n\r\n========================================\r\n\r\n--\u6570\u5b66\u8fd0\u7b97\u51fd\u6570\r\n--\u56db\u820d\u4e94\u5165\r\nselect round(5.4)\r\n--\u56db\u820d\u4e94\u5165\u4fdd\u75592\u4f4d\u5c0f\u6570\r\nselect round(5.1345,2)\r\n--\u5411\u4e0a\u53d6\u6574\r\nselect ceil(5.3)\r\n--\u5411\u4e0b\u53d6\u6574\r\nselect floor(5.3)\r\n--\u53d6\u7edd\u5bf9\u503c\r\nselect abs(-5.2)\r\n--\u53d6\u6700\u5927\u503c\r\nselect greatest(3,4,5,6,7)\r\n--\u53d6\u6700\u5c0f\u503c\r\nselect least(3,4,5,6,7)\r\n\r\n==================================================\r\n\r\n1,19,a,male\r\n2,19,b,male\r\n3,22,c,female\r\n4,16,d,female\r\n5,30,e,male\r\n6,26,f,female\r\n\r\n+---------------+----------------+-----------------+----------------+--+\r\n| t_student.id | t_student.age | t_student.name | t_student.sex |\r\n+---------------+----------------+-----------------+----------------+--+\r\n| 1 | 19 | a | male |\r\n| 2 | 19 | b | male |\r\n| 5 | 30 | e | male |\r\n\r\n| 3 | 22 | c | female |\r\n| 4 | 16 | d | female |\r\n| 6 | 26 | f | female |\r\n\r\n+---------------+----------------+-----------------+----------------+--+\r\n\r\nrow_number() over()\r\n\r\nselect\r\nid,age,name,sex,row_number() over(partition by sex order by age desc) rk\r\nfrom t_student\r\n\r\nselect\r\ntmp.*\r\nfrom\r\n(select\r\nid,age,name,sex,row_number() over(partition by sex order by age desc) rk\r\nfrom t_student) tmp\r\nwhere tmp.rk = 1\r\n\r\nselect\r\nid,age,name,sex,rank() over(partition by sex order by age desc) rk\r\nfrom t_student\r\n\r\nselect\r\nid,age,name,sex,dense_rank() over(partition by sex order by age desc) rk\r\nfrom t_student\r\n\r\n========================================\r\n\r\nA,2015-01,5\r\nA,2015-01,15\r\nB,2015-01,5\r\nA,2015-01,8\r\nB,2015-01,25\r\nA,2015-01,5\r\nC,2015-01,10\r\nC,2015-01,20\r\nA,2015-02,4\r\nA,2015-02,6\r\nC,2015-02,30\r\nC,2015-02,10\r\nB,2015-02,10\r\nB,2015-02,5\r\nA,2015-03,14\r\nA,2015-03,6\r\nB,2015-03,20\r\nB,2015-03,25\r\nC,2015-03,10\r\nC,2015-03,20\r\n\r\n--\u6c42\u6bcf\u4e2a\u7528\u6237\u6bcf\u4e2a\u6708\u7684\u9500\u552e\u989d\u548c\u5230\u5f53\u6708\u4f4d\u7f6e\u7684\u7d2f\u8ba1\u9500\u552e\u989d\r\ncreate table t_saller(name string,month string,amount int)\r\nrow format delimited fields terminated by ','\r\n\r\ncreate table t_accumulate\r\nas\r\nselect name,month,sum(amount) samount\r\nfrom t_saller\r\ngroup by name,month\r\n\r\n+--------------------+---------------------+-----------------------+--+\r\n| t_accumulate.name | t_accumulate.month | t_accumulate.samount |\r\n+--------------------+---------------------+-----------------------+--+\r\n| A | 2015-01 | 33 |\r\n| A | 2015-02 | 10 |\r\n| A | 2015-03 | 20 |\r\n| B | 2015-01 | 30 |\r\n| B | 2015-02 | 15 |\r\n| B | 2015-03 | 45 |\r\n| C | 2015-01 | 30 |\r\n| C | 2015-02 | 40 |\r\n| C | 2015-03 | 30 |\r\n+--------------------+---------------------+-----------------------+--+\r\n--\u6700\u524d\u9762\u4e00\u884c\r\nselect\r\nname,month,samount,sum(samount) over(partition by name order by month rows between unbounded preceding and current row) accumlateAmount\r\nfrom\r\nt_accumulate\r\n\r\n| A | 2015-01 | 33 |\r\n| A | 2015-02 | 10 |\r\n| A | 2015-03 | 20 |\r\n| A | 2015-04 | 30 |\r\n| A | 2015-05 | 15 |\r\n| A | 2015-06 | 45 |\r\n| A | 2015-07 | 30 |\r\n| A | 2015-08 | 40 |\r\n| A | 2015-09 | 30 |\r\n\r\nselect\r\nname,month,samount,sum(samount) over(partition by name order by month rows between 2 preceding and 1 following ) accumlateAmount\r\nfrom\r\nt_accumulate\r\n\r\npreceding |\r\n\u5f53\u524d\u884c | \u7a97\u53e3\u957f\u5ea6\r\nfollowing |\r\n\r\nmin() over() ,max() over() , avg() over()\r\n\r\n========================================\r\n\r\n1,zhangsan,\u5316\u5b66:\u7269\u7406:\u6570\u5b66:\u8bed\u6587\r\n2,lisi,\u5316\u5b66:\u6570\u5b66:\u751f\u7269:\u751f\u7406:\u536b\u751f\r\n3,wangwu,\u5316\u5b66:\u8bed\u6587:\u82f1\u8bed:\u4f53\u80b2:\u751f\u7269\r\n\r\ncreate table t_stu_subject(id int,name string,subjects array<string>)\r\nrow format delimited fields terminated by ','\r\ncollection items terminated by ':'\r\n\r\nexplode()\r\n\r\nselect explode(subjects) from t_stu_subject;\r\n\r\nselect distinct tmp.subs from (select explode(subjects) subs from t_stu_subject) tmp\r\n\r\n========================================\r\n\r\nlateral view\u8fde\u63a5\u51fd\u6570\r\n\r\nselect\r\nid,name,sub\r\nfrom\r\nt_stu_subject lateral view explode(subjects) tmp as sub\r\n\r\n+-----+-----------+------+--+\r\n| id | name | sub |\r\n+-----+-----------+------+--+\r\n| 1 | zhangsan | \u5316\u5b66 |\r\n| 1 | zhangsan | \u7269\u7406 |\r\n| 1 | zhangsan | \u6570\u5b66 |\r\n| 1 | zhangsan | \u8bed\u6587 |\r\n| 2 | lisi | \u5316\u5b66 |\r\n| 2 | lisi | \u6570\u5b66 |\r\n| 2 | lisi | \u751f\u7269 |\r\n| 2 | lisi | \u751f\u7406 |\r\n| 2 | lisi | \u536b\u751f |\r\n| 3 | wangwu | \u5316\u5b66 |\r\n| 3 | wangwu | \u8bed\u6587 |\r\n| 3 | wangwu | \u82f1\u8bed |\r\n| 3 | wangwu | \u4f53\u80b2 |\r\n| 3 | wangwu | \u751f\u7269 |\r\n+-----+-----------+------+--+\r\n\r\n========================================\r\n\r\nwordcount\r\n\r\nwords\r\n\r\ncreate table words(line string)\r\n\r\nline\r\nhello world hi tom and jack\r\nhello chentianxing qiaoyuan and shaoshuai\r\nhello hello hi tom and shaoshuai\r\nchentianxing love saoshuai\r\nhello love what is love how love\r\n\r\nsplit()\r\n\r\nselect\r\ntmp.word,count(1) cnts\r\nfrom\r\n(select\r\nexplode(split(line,' ')) word\r\nfrom words) tmp\r\ngroup by tmp.word order by cnts desc\r\n\r\n========================================\r\n\r\n--\u70b8map\r\nselect\r\nid,name,key,value\r\nfrom\r\nt_user\r\nlateral view explode(family) tmp as key,value\r\n\r\n========================================\r\n\r\n--\u6709web\u7cfb\u7edf\uff0c\u6bcf\u5929\u4ea7\u751f\u4e0b\u5217\u7684\u65e5\u5fd7\u6587\u4ef6\r\n\r\n2017-09-15\u53f7\u7684\u6570\u636e\uff1a\r\n192.168.33.6,hunter,2017-09-15 10:30:20,/a\r\n192.168.33.7,hunter,2017-09-15 10:30:26,/b\r\n192.168.33.6,jack,2017-09-15 10:30:27,/a\r\n192.168.33.8,tom,2017-09-15 10:30:28,/b\r\n192.168.33.9,rose,2017-09-15 10:30:30,/b\r\n192.168.33.10,julia,2017-09-15 10:30:40,/c\r\n\r\n2017-09-16\u53f7\u7684\u6570\u636e\uff1a\r\n192.168.33.16,hunter,2017-09-16 10:30:20,/a\r\n192.168.33.18,jerry,2017-09-16 10:30:30,/b\r\n192.168.33.26,jack,2017-09-16 10:30:40,/a\r\n192.168.33.18,polo,2017-09-16 10:30:50,/b\r\n192.168.33.39,nissan,2017-09-16 10:30:53,/b\r\n192.168.33.39,nissan,2017-09-16 10:30:55,/a\r\n192.168.33.39,nissan,2017-09-16 10:30:58,/c\r\n192.168.33.20,ford,2017-09-16 10:30:54,/c\r\n\r\n2017-09-17\u53f7\u7684\u6570\u636e\uff1a\r\n192.168.33.46,hunter,2017-09-17 10:30:21,/a\r\n192.168.43.18,jerry,2017-09-17 10:30:22,/b\r\n192.168.43.26,tom,2017-09-17 10:30:23,/a\r\n192.168.53.18,bmw,2017-09-17 10:30:24,/b\r\n192.168.63.39,benz,2017-09-17 10:30:25,/b\r\n192.168.33.25,haval,2017-09-17 10:30:30,/c\r\n192.168.33.10,julia,2017-09-17 10:30:40,/c\r\n\r\n--\u7edf\u8ba1\u65e5\u6d3b\u8dc3\u7528\u6237\r\n\r\n--\u7edf\u8ba1\u6bcf\u65e5\u65b0\u589e\u7528\u6237\r\n\r\n--\u7edf\u8ba1\u5386\u53f2\u7528\u6237\r\n\r\n--\u521b\u5efa\u65e5\u5fd7\u8868\r\ncreate table t_web_log(ip string,uname string,access_time string,url string)\r\npartitioned by (day string)\r\nrow format delimited fields terminated by ',';\r\n\r\n--\u521b\u5efa\u65e5\u6d3b\u8dc3\u7528\u6237\u8868\r\ncreate table t_user_active_day\r\nlike\r\nt_web_log;\r\n\r\n--\u7edf\u8ba1\u65e5\u6d3b\u8dc3\u7528\u6237\r\ninsert into table t_user_active_day partition(day='2017-09-15')\r\nselect tmp.ip,tmp.uname,tmp.access_time,tmp.url\r\nfrom\r\n(select\r\nip,uname,access_time,url,row_number() over(partition by uname order by access_time) rn\r\nfrom\r\nt_web_log where day='2017-09-15') tmp\r\nwhere rn <2\r\n\r\n--\u521b\u5efa\u5386\u53f2\u7528\u6237\u8868\r\ncreate table t_user_history(uname string)\r\n\r\n--\u521b\u5efa\u65e5\u65b0\u589e\u7528\u6237\u8868\r\ncreate table t_user_new_day like t_user_active_day;\r\n\r\n--\u7edf\u8ba1\u65e5\u65b0\u589e\u7528\u6237\r\ninsert into table t_user_new_day partition(day='2017-09-15')\r\nselect\r\ntua.ip,tua.uname,tua.access_time,tua.url\r\nfrom t_user_active_day tua\r\nleft join t_user_history tuh on tua.uname = tuh.uname\r\nwhere tua.day = '2017-09-15' and tuh.uname IS NULL\r\n\r\n--\u8bb0\u5f55\u5386\u53f2\u7528\u6237\r\ninsert into table t_user_history\r\nselect\r\nuname\r\nfrom t_user_new_day\r\nwhere day='2017-09-15'\r\n\r\ninsert into table t_user_active_day partition(day='2017-09-16')\r\nselect tmp.ip,tmp.uname,tmp.access_time,tmp.url\r\nfrom\r\n(select\r\nip,uname,access_time,url,row_number() over(partition by uname order by access_time) rn\r\nfrom\r\nt_web_log where day='2017-09-16') tmp\r\nwhere rn <2\r\n\r\ninsert into table t_user_new_day partition(day='2017-09-16')\r\nselect\r\ntua.ip,tua.uname,tua.access_time,tua.url\r\nfrom t_user_active_day tua\r\nleft join t_user_history tuh on tua.uname = tuh.uname\r\nwhere tua.day = '2017-09-16' and tuh.uname IS NULL\r\n\r\ninsert into table t_user_history\r\nselect\r\nuname\r\nfrom t_user_new_day\r\nwhere day='2017-09-16'\r\n\r\n--\u6876\u8868\r\n--\u521b\u5efa\u6876\u8868\uff0c\u6309id\u5206\u6210\u4e09\u4e2a\u6876\r\ncreate table t1(id int,name string,age int)\r\nclustered by(id) into 3 buckets\r\nrow format delimited fields terminated by ',';\r\n\r\n--\u6876\u8868\u63d2\u5165\u6570\u636e\u7684\u65b9\u5f0f\r\ncreate table t1_1(id int,name string,age int)\r\nrow format delimited fields terminated by ',';\r\n\r\nset hive.enforce.bucketing=true;\r\nset mapreduce.job.reduces=3;\r\n\r\ninsert into t1 select * from t1_1;\r\n\r\n========================================\r\nhive\u81ea\u5b9a\u4e49\u51fd\u6570\r\npackage com.bwie.hive.udf;\r\n\r\nimport com.alibaba.fastjson.JSONObject;\r\nimport org.apache.hadoop.hive.ql.exec.UDF;\r\n\r\npublic class JsonUDF extends UDF {\r\n\r\npublic String evaluate(String json,String colum){\r\n    JSONObject jsonObject = JSONObject.parseObject(json);\r\n    String value = jsonObject.getString(colum);\r\n    return value;\r\n}\r\n}\r\n\r\n\u6253\u5305\u4e0a\u4f20\r\nadd jar /root/hivetest-1.0-SNAPSHOT.jar;\r\ncreate temporary function getjson as 'com.bwie.hive.udf.JsonUDF';\r\n\r\nselect\r\ngetjson(json,'movie') as movie,getjson(json,'rate') as rate,from_unixtime(CAST(getjson(json,'timeStamp') as BIGINT),'yyyy-MM-dd HH:mm:ss') as showtime,getjson(json,'uid') as uid\r\nfrom t_ex_rat limit 10;\r\n\r\n--\u521b\u5efa\u6c38\u4e45\u51fd\u6570\r\n\u65b9\u6cd5\u4e00\u3001\r\n\u5728hive-site.xml\u91cc\u6dfb\u52a0jar\u5305\r\n<property>\r\n<name>hive.aux.jars.path</name>\r\n<value>file:///usr/local/apache-hive-1.2.2-bin/lib/hivetest-1.0-SNAPSHOT.jar</value>\r\n</property>\r\n\u7591\u4f3cjar\u5305\u8981\u653e\u5230lib\u4e0b\u624d\u80fd\u751f\u6548\r\ncreate function getjson AS 'com.bwie.hive.udf.JsonUDF'\r\n\r\n\u65b9\u6cd5\u4e8c\u3001\r\ncreate function getjson as 'com.bwie.hive.udf.JsonUDF' using jar 'hdfs://hdp1703/lib/hivetest-1.0-SNAPSHOT.jar'\r\n\r\ndrop function getjson\r\n\r\n========================================\r\n\r\ncreate table t_employee(id int,name string,age int)\r\npartitioned by(state string,city string)\r\nrow format delimited fields terminated by ','\r\n\r\ncreate table t_employee_orgin(id int,name string,age int,state string,city string)\r\nrow format delimited fields terminated by ',';\r\n\r\nload data local inpath '/root/employ.txt' into table t_employee_orgin;\r\n\r\n\u5728\u4e25\u683c\u6a21\u5f0f\u4e0b\uff0c\u591a\u4e2a\u5206\u533a\u4e00\u5b9a\u6709\u4e00\u4e2a\u5206\u533a\u662f\u56fa\u5b9a\u7684\r\ninsert into t_employee\r\npartition(state='china',city)\r\nselect id,name,age,city\r\nfrom t_employee_orgin\r\nwhere state='china'\r\n\r\n--\u975e\u4e25\u683c\u6a21\u5f0f\r\nset hive.exec.dynamic.partition.mode=nostrict;\r\ninsert into t_employee\r\npartition(state,city)\r\nselect id,name,age,state,city\r\nfrom t_employee_orgin\r\n\r\n========================================\r\n\r\nselect to_date('2019-09-20 17:30:00')\r\n\r\nunix_timestamp('2019/09/20 17:30:00','yyyy/MM/dd HH:mm:ss')\r\n\r\nselect from_unixtime(unix_timestamp('2019/09/20 17:30:00','yyyy/MM/dd HH:mm:ss'),'yyyy-MM-dd HH:mm:ss')\u3002", "top": 0, "createdAt": 1719925547, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/SPARK-can-shu.html", "labels": ["documentation"], "postTitle": "SPARK\u53c2\u6570", "postUrl": "post/SPARK-can-shu.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/2", "commentNum": 0, "wordCount": 8995, "description": "\r\n\r\n## Driver\r\n\r\n**spark.driver.cores**\r\n\r\ndriver\u7aef\u5206\u914d\u7684\u6838\u6570\uff0c\u9ed8\u8ba4\u4e3a1\uff0cthriftserver\u662f\u542f\u52a8thriftserver\u670d\u52a1\u7684\u673a\u5668\uff0c\u8d44\u6e90\u5145\u8db3\u7684\u8bdd\u53ef\u4ee5\u5c3d\u91cf\u7ed9\u591a\u3002", "top": 0, "createdAt": 1719926662, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/hive-shu-ju-qing-xie-yuan-yin-jie-jue-fang-fa.html", "labels": ["documentation"], "postTitle": "hive\u6570\u636e\u503e\u659c\u539f\u56e0\u89e3\u51b3\u65b9\u6cd5", "postUrl": "post/hive-shu-ju-qing-xie-yuan-yin-jie-jue-fang-fa.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/3", "commentNum": 0, "wordCount": 2265, "description": "### Hive\u503e\u659c\u4e4bgroup by\u805a\u5408\u503e\u659c\r\n**\u539f\u56e0\uff1a**\r\n- \u5206\u7ec4\u7684\u7ef4\u5ea6\u8fc7\u5c11\uff0c\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u503c\u8fc7\u591a\uff0c\u5bfc\u81f4\u5904\u7406\u67d0\u503c\u7684reduce\u8017\u65f6\u5f88\u4e45\uff1b\r\n\r\n- \u5bf9\u4e00\u4e9b\u7c7b\u578b\u7edf\u8ba1\u7684\u65f6\u5019\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u636e\u91cf\u7279\u522b\u591a\uff0c\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b\u7279\u522b\u5c11\u3002", "top": 0, "createdAt": 1719926762, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/spark-kai-fa-diao-you.html", "labels": ["documentation"], "postTitle": "spark\u5f00\u53d1\u8c03\u4f18", "postUrl": "post/spark-kai-fa-diao-you.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/4", "commentNum": 0, "wordCount": 9926, "description": "## 1. \u907f\u514d\u91cd\u590d\u521b\u5efaRDD\r\n\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u5f00\u53d1\u4e00\u4e2aSpark\u4f5c\u4e1a\u65f6\uff0c\u9996\u5148\u662f\u57fa\u4e8e\u67d0\u4e2a\u6570\u636e\u6e90\uff08\u6bd4\u5982Hive\u8868\u6216HDFS\u6587\u4ef6\uff09\u521b\u5efa\u4e00\u4e2a\u521d\u59cb\u7684RDD\uff1b\u63a5\u7740\u5bf9\u8fd9\u4e2aRDD\u6267\u884c\u67d0\u4e2a\u7b97\u5b50\u64cd\u4f5c\uff0c\u7136\u540e\u5f97\u5230\u4e0b\u4e00\u4e2aRDD\uff1b\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5faa\u73af\u5f80\u590d\uff0c\u76f4\u5230\u8ba1\u7b97\u51fa\u6700\u7ec8\u6211\u4eec\u9700\u8981\u7684\u7ed3\u679c\u3002", "top": 0, "createdAt": 1719926816, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/spark-yun-xing-liu-cheng.html", "labels": ["documentation"], "postTitle": "spark\u8fd0\u884c\u6d41\u7a0b", "postUrl": "post/spark-yun-xing-liu-cheng.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/5", "commentNum": 0, "wordCount": 1497, "description": "### spark\u4e2d\u57fa\u672c\u6982\u5ff5\r\n1. Application\uff1a\u8868\u793a\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\r\n2. Driver\uff1a\u8868\u793amain()\u51fd\u6570\uff0c\u521b\u5efaSparkContext\u3002", "top": 0, "createdAt": 1719926870, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/RDD-yu-suan-zi.html", "labels": ["documentation"], "postTitle": "RDD\u4e0e\u7b97\u5b50", "postUrl": "post/RDD-yu-suan-zi.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/6", "commentNum": 0, "wordCount": 6541, "description": "## \u4ec0\u4e48\u662fRDD\r\n- RDD\uff08Resilient Distributed Dataset\uff09\u53eb\u505a\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u662fSpark\u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u62bd\u8c61\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u4e0d\u53ef\u53d8\u3001\u53ef\u5206\u533a\u3001\u91cc\u9762\u7684\u5143\u7d20\u53ef\u5e76\u884c\u8ba1\u7b97\u7684\u96c6\u5408\u3002", "top": 0, "createdAt": 1719926909, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/Flink-zhi-ListState.html", "labels": ["documentation"], "postTitle": "Flink\u4e4bListState", "postUrl": "post/Flink-zhi-ListState.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/8", "commentNum": 0, "wordCount": 2321, "description": "**process\u5185\u4f7f\u7528KeyedProcessFunction**\r\nliststate\u53ef\u4ee5\u8bbe\u7f6e\u68c0\u67e5\u70b9\u5f53\u7a0b\u5e8f\u5728\u67d0\u65f6\u523b\u505c\u6b62\u518d\u542f\u52a8\u4f1a\u7ee7\u7eed(\u8bb0\u5f55\u504f\u79fb\u91cf)\r\n```\r\nkeyBy('windowEnd').process(new KeyedProcessFunction<Tuple, ItemCount, String>() {\r\n\r\n            ListState<ItemCount> listState = null;\r\n\r\n\r\n\r\n            //3.\u5b9a\u65f6\u5668\u5b9e\u73b0\u903b\u8f91\r\n            @Override\r\n            public void onTimer(long timestamp, OnTimerContext ctx, Collector<String> out) throws Exception {\r\n\r\n                ArrayList<ItemCount> itemCounts = new ArrayList<>();\r\n                //\u5c06listState\u5185\u7684\u6570\u636e\u53d6\u51fa\r\n                for (ItemCount itemCount : listState.get()) {\r\n\r\n                    itemCounts.add(itemCount);\r\n\r\n                }\r\n\r\n                //\u6392\u5e8f\r\n                Collections.sort(itemCounts, new Comparator<ItemCount>() {\r\n                    @Override\r\n                    public int compare(ItemCount o1, ItemCount o2) {\r\n                        return o1.count.compareTo(o2.count);\r\n                    }\r\n                });\r\n\r\n                StringBuffer stringBuffer = new StringBuffer('\u65f6\u95f4 :'+sdt.format(itemCounts.get(0).windowEnd));\r\n\r\n                for (int i = 0;i<itemCounts.size();i++){\r\n\r\n                    ItemCount itemCount = itemCounts.get(i);\r\n\r\n                    stringBuffer.append('\u5546\u54c1ID :'+itemCount.itemID+' \u70b9\u51fb\u91cf :'+itemCount.count+'\\n');\r\n\r\n\r\n                }\r\n                //\u53d1\u9001\u51fa\u53bb\r\n                out.collect(stringBuffer.toString());\r\n                //\u6e05\u7406list\r\n                itemCounts.clear();\r\n\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            //1.\u5c06ListStateDescriptor\u63cf\u8ff0\u521b\u5efa\u51fa\u6765\u4f5c\u4e3a\u5168\u5c40\u4f7f\u7528\r\n            public void open(Configuration parameters) throws Exception {\r\n\r\n                ListStateDescriptor<ItemCount> jk = new ListStateDescriptor<>(\r\n                        'jk',//\u540d\u79f0\r\n                        TypeInformation.of(new TypeHint<ItemCount>() {\r\n                        }) //\u7c7b\u578b\r\n\r\n\r\n                );\r\n\r\n                //\u521b\u5efa\u51falistState\r\n                listState = getRuntimeContext().getListState(jk);\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            //2.\u5c06\u6570\u636e\u6dfb\u52a0\u5230listState\r\n            public void processElement(ItemCount value, Context ctx, Collector<String> out) throws Exception {\r\n\r\n\r\n                listState.add(value);\r\n                //\u521b\u5efa\u5b9a\u65f6\u5668\r\n                ctx.timerService().registerEventTimeTimer(value.windowEnd + 1);\r\n\r\n            }\r\n\r\n        });\u3002", "top": 0, "createdAt": 1719926980, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/Flink-zhi-ApplyAndWindowFunction.html", "labels": ["documentation"], "postTitle": "Flink\u4e4bApplyAndWindowFunction", "postUrl": "post/Flink-zhi-ApplyAndWindowFunction.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/9", "commentNum": 0, "wordCount": 2177, "description": "**apply\u4e2d\u7684WindowFunction\u4f7f\u7528\u65b9\u6cd5**\r\n```\r\n.keyby(0,1)\r\n.timeWindow(Time.seconds(60))\r\n                            \u8f93\u5165tuple4                                    \u8f93\u51fatuple6\r\n.apply(new WindowFunction<Tuple4<String, String, Double, Long>, Tuple6<String, String, Double, Double, \r\n Tuple\u91cc\u9762\u6709keyby\u7684\u6570\u636e TimeWindow\u53ef\u4ee5get\u51fa\u7a97\u53e3\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\r\nDouble, Long>, Tuple, TimeWindow>() {\r\n                    @Override\r\n                    \u5177\u4f53\u7684\u903b\u8f91                                       \u6b64\u5904\u662fkeyby\u8fdb\u884c\u5206\u7ec4\u540e\u7684\u4e00\u7ec4\u6570\u636e\r\n                    public void apply(Tuple tuple, TimeWindow window, Iterable<Tuple4<String, String, Double, Long>> input, Collector<Tuple6<String, String, Double, Double, Double, Long>> out) throws Exception {\r\n                        \u5c06\u6570\u636e\u8fed\u4ee3\u51fa\u6765\u8fdb\u884c\u903b\u8f91\u5904\u7406\r\n                        Iterator<Tuple4<String, String, Double, Long>> it = input.iterator();\r\n                        List<Tuple4<String, String, Double, Long>> dataList = new ArrayList<>();\r\n\r\n                        Long count = 0L;\r\n                        Double sum = 0.0;\r\n                        while (it.hasNext()) {\r\n                            Tuple4<String, String, Double, Long> next = it.next();\r\n                            sum += next.f2;\r\n                            count++;\r\n                            dataList.add(next);\r\n                        }\r\n                        Collections.sort(dataList, new Comparator<Tuple4<String, String, Double, Long>>() {\r\n                            @Override\r\n                            public int compare(Tuple4<String, String, Double, Long> o1, Tuple4<String, String, Double, Long> o2) {\r\n                                return o2.f2.compareTo(o1.f2);\r\n                            }\r\n                        });\r\n\r\n                        double avg = sum / count;\r\n                        double max = dataList.get(0).f2;\r\n                        double min = dataList.get(dataList.size() - 1).f2;\r\n\r\n                        String devId = tuple.getField(0);\r\n                        String metric = tuple.getField(1);\r\n                         \u5c06\u6570\u636e\u53d1\u5c04\u8f93\u51fa\r\n                        out.collect(Tuple6.of(devId, metric, max, min, avg, window.getStart()));\r\n\r\n                    }\r\n                });\u3002", "top": 0, "createdAt": 1719927037, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/FlinkBathSQLscala.html", "labels": ["documentation"], "postTitle": "FlinkBathSQLscala", "postUrl": "post/FlinkBathSQLscala.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/10", "commentNum": 0, "wordCount": 1671, "description": "**\u8bfb\u6587\u672c**\r\n```\r\nval env = ExecutionEnvironment.getExecutionEnvironment\r\n\r\n    val tableENV = TableEnvironment.getTableEnvironment(env)\r\n    //\u8bfb\u53d6\u6587\u672c\u6570\u636e\r\n    val unit = env.readTextFile('J:\\\\idea2019\\\\works\\\\sjmyexam03\\\\ru.txt')\r\n    //\u9690\u5f0f\u8f6c\u6362\r\n    import org.apache.flink.api.scala._\r\n    import org.apache.flink.table.api.scala._\r\n    //\u4f7f\u7528map\u5c06\u8bfb\u53d6\u5230\u7684\u6570\u636e\u5207\u5272\u653e\u5165\u5143\u7ec4(\u5c06\u6570\u636e\u653e\u5165DataSet)\r\n    val unit1:DataSet[(String,String,String)] = unit.map(\r\n      x => {\r\n        val strings = x.split(',')\r\n\r\n        (strings(0), strings(1), strings(2))\r\n\r\n      }\r\n\r\n    )\r\n  //\u6ce8\u518c\u8868                   //\u8868\u540d   //DataSet //\u5b57\u6bb5\u540d  \r\n    tableENV.registerDataSet('stu',unit1,'ids,'name,'jk)\r\n                              //sqlQuery\r\n    val table = tableENV.sqlQuery(' select ids,name,jk from stu where ids = '1'')\r\n\r\n    tableENV.toDataSet[Row](table).print()\r\n\r\n\r\n  }\r\n```\r\n**\u8bfb\u6570\u7ec4**\r\n```\r\n     val env = ExecutionEnvironment.getExecutionEnvironment\r\n\r\n    val tableENV = TableEnvironment.getTableEnvironment(env)\r\n\r\n    import org.apache.flink.api.scala._\r\n    import org.apache.flink.table.api.scala._\r\n\r\n    val tuples = List(\r\n      ('u001', 'alex', 'jk'),\r\n      ('u002', 'lucy', 'lolita'),\r\n      ('u003', 'rose', 'jk')\r\n    )\r\n\r\n    val tuple3 = List(\r\n      ('u001', '\u5973'),\r\n      ('u002', '\u5973'),\r\n      ('u003', '\u7537')\r\n    )\r\n\r\n\r\n\r\n      //\u8f6c\u6362\u6570\u636e\r\n    val unit = env.fromCollection(tuples)\r\n\r\n    val value = env.fromCollection(tuple3)\r\n    //\u6ce8\u518c\u8868\r\n    tableENV.registerDataSet('pro',unit,'ids,'name,'likes)\r\n\r\n    tableENV.registerDataSet('my',value,'ids,'sex)\r\n    //\u67e5\u8be2\r\n    val table = tableENV.sqlQuery('select * from pro p left join my j on p.ids=j.ids ')\r\n\r\n\r\n    tableENV.toDataSet[Row](table).print()\u3002", "top": 0, "createdAt": 1719927099, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/Flink-zhi-Watermarks.html", "labels": ["documentation"], "postTitle": "Flink\u4e4bWatermarks", "postUrl": "post/Flink-zhi-Watermarks.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/11", "commentNum": 0, "wordCount": 5858, "description": "**\u6e90\u7801\u5228\u6790** **:**\r\n\u8bbe\u7f6e\u6c34\u5370\u65f6\u95f4\u9632\u6b62\u6570\u636e\u4e71\u5e8f\r\n```\r\npublic class BoundedOutOfOrdernessGenerator implements AssignerWithPeriodicWatermarks<MyEvent> {\r\n\r\n    private final long maxOutOfOrderness = 10000; //\u6700\u5927\u5141\u8bb8\u4e71\u5e8f\u65f6\u95f4\r\n\r\n    private long currentMaxTimestamp;//\u73b0\u5728\u6700\u5927\u7684\u65f6\u95f4\u6233\r\n\r\n    @Override\r\n    //extractTimestamp\u62bd\u53d6\u6570\u636e\u7684\u65f6\u95f4\u6233\r\n    public long extractTimestamp(MyEvent element, long previousElementTimestamp) {\r\n        //\u4eceelement\u83b7\u53d6\u65f6\u95f4\r\n        long timestamp = element.getCreationTime();\r\n        //\u4ecetimestamp\u548c\u6700\u5927\u65f6\u95f4\u6233\u53d6\u6700\u5927\u65f6\u95f4\r\n        currentMaxTimestamp = Math.max(timestamp, currentMaxTimestamp);\r\n        return timestamp;\r\n    }\r\n\r\n    @Override\r\n    //getCurrentWatermark\u5f97\u5230\u5f53\u524d\u6c34\u5370\u65f6\u95f4(100ms\u8c03\u7528\u4e00\u6b21)\r\n    public Watermark getCurrentWatermark() {\r\n        // \u6c34\u5370=\u5f53\u524d\u6700\u5927\u7684\u65f6\u95f4\u6233 - \u6700\u5927\u5141\u8bb8\u4e71\u5e8f\u65f6\u95f4\r\n        return new Watermark(currentMaxTimestamp - maxOutOfOrderness);\r\n    }\r\n}\r\n```\r\n**\u6a21\u62dfWatermarks** **:**\r\n```\r\npublic static void main(String[] args) throws Exception {\r\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\r\n        env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\r\n\r\n        env.setParallelism(1);\r\n\r\n        DataStreamSource<String> text = env.socketTextStream('localhost', 8888, '\\n');\r\n\r\n        SingleOutputStreamOperator<Tuple2<String, Long>> inputmap = text.map(new MapFunction<String, Tuple2<String, Long>>() {\r\n            @Override\r\n            public Tuple2<String, Long> map(String value) throws Exception {\r\n                String[] arr = value.split(',');\r\n                return new Tuple2<String, Long>(arr[0], Long.parseLong(arr[1]));\r\n            }\r\n        });\r\n\r\n        SingleOutputStreamOperator<Tuple2<String, Long>> watermarkStream = inputmap.assignTimestampsAndWatermarks(new AssignerWithPeriodicWatermarks<Tuple2<String, Long>>() {\r\n\r\n\r\n            SimpleDateFormat sdf = new SimpleDateFormat('yyyy-MM-dd HH:mm:ss.SSS');\r\n            Long currentMaxTimestamp = 0L;\r\n            final Long maxOutOfOrderness = 10000L;// \u6700\u5927\u5141\u8bb8\u7684\u4e71\u5e8f\u65f6\u95f4\u662f10s\r\n\r\n            //\u9ed8\u8ba4100ms\u88ab\u8c03\u7528\u4e00\u6b21\r\n            @Nullable\r\n            @Override\r\n            public Watermark getCurrentWatermark() {\r\n                return new Watermark(currentMaxTimestamp - maxOutOfOrderness);\r\n            }\r\n\r\n            //\u5b9a\u4e49\u5982\u4f55\u63d0\u53d6timestamp\r\n            @Override\r\n            public long extractTimestamp(Tuple2<String, Long> element, long previousElementTimestamp) {\r\n                long timestamp = element.f1;\r\n                currentMaxTimestamp = Math.max(timestamp, currentMaxTimestamp);\r\n                long id = Thread.currentThread().getId();\r\n                System.out.println('currentThreadId:' + id + ',key:' + element.f0 + ',eventtime:[' + element.f1 + '|' + sdf.format(element.f1) + '],currentMaxTimestamp:[' + currentMaxTimestamp + '|' +\r\n                        sdf.format(currentMaxTimestamp) + '],watermark:[' + getCurrentWatermark().getTimestamp() + '|' + sdf.format(getCurrentWatermark().getTimestamp()) + ']');\r\n                return timestamp;\r\n            }\r\n        });\r\n\r\n        //\u4fdd\u5b58\u88ab\u4e22\u5f03\u7684\u6570\u636e\r\n        OutputTag<Tuple2<String, Long>> outputTag = new OutputTag<Tuple2<String, Long>>('late-data'){};\r\n        SingleOutputStreamOperator<String> applied = watermarkStream.keyBy(0)\r\n                .timeWindow(Time.seconds(3))\r\n                //.allowedLateness(Time.seconds(2))//\u5141\u8bb8\u6570\u636e\u8fdf\u52302\u79d2\r\n                .sideOutputLateData(outputTag)\r\n                .apply(new WindowFunction<Tuple2<String, Long>, String, Tuple, TimeWindow>() {\r\n                    @Override\r\n                    public void apply(Tuple tuple, TimeWindow window, Iterable<Tuple2<String, Long>> input, Collector<String> out) throws Exception {\r\n                        String key = tuple.toString();\r\n                        List<Long> arrarList = new ArrayList<Long>();\r\n                        Iterator<Tuple2<String, Long>> it = input.iterator();\r\n                        while (it.hasNext()) {\r\n                            Tuple2<String, Long> next = it.next();\r\n                            arrarList.add(next.f1);\r\n                        }\r\n                        Collections.sort(arrarList);\r\n                        SimpleDateFormat sdf = new SimpleDateFormat('yyyy-MM-dd HH:mm:ss.SSS');\r\n                        String result = key + ',' + arrarList.size() + ',' + sdf.format(arrarList.get(0)) + ',' + sdf.format(arrarList.get(arrarList.size() - 1))\r\n                                + ',' + sdf.format(window.getStart()) + ',' + sdf.format(window.getEnd());\r\n                        out.collect(result);\r\n                    }\r\n                });\r\n\r\n        //\u628a\u8fdf\u5230\u7684\u6570\u636e\u6682\u65f6\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u5b9e\u9645\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u5230\u5176\u4ed6\u5b58\u50a8\u4ecb\u8d28\u4e2d\r\n        DataStream<Tuple2<String, Long>> sideOutput = applied.getSideOutput(outputTag);\r\n        applied.print();\r\n\r\n        env.execute();\r\n\r\n    }\r\n```\r\n\r\n\r\n> \u8f93\u5165\u6570\u636e\r\n                  0001,1538359882000\r\n 0001,1538359886000\r\n0001,1538359892000\r\n0001,1538359893000\r\n0001,1538359894000\r\n\r\n> \u8f93\u51fa\u6570\u636e\r\n     eventTime*************/ currentMaxTimestamp / Watermark \r\n     2018-10-01 10:11:**22** / 2018-10-01 10:11:22 / 2018-10-01 10:11:12\r\n    2018-10-01 10:11:26 / 2018-10-01 10:11:26 / 2018-10-01 10:11:16\r\n    2018-10-01 10:11:32 / 2018-10-01 10:11:32 / 2018-10-01 10:11:22\r\n    2018-10-01 10:11:33 / 2018-10-01 10:11:33 / 2018-10-01 10:11:23\r\n    2018-10-01 10:11:34 / 2018-10-01 10:11:34 / 2018-10-01 10:11:**24**\r\n   \r\n**\u8bbe\u7f6e\u7684.timeWindow(Time.seconds(3))\u662f\u7cfb\u7edf\u5212\u5206\u7684\u65f6\u95f4\u6bb5,\u9075\u5faa\u524d\u5305\u540e\u4e0d\u5305\u539f\u5219.**\r\n**\u5f53Watermark>=\u7a97\u53e3\u7684\u7ed3\u675f\u65f6\u95f4\u5c31\u89e6\u53d1\u5e76\u4e14\u7a97\u53e3\u5185\u6709\u6570\u636e.**\r\n## \u5bf9\u4e8e\u8fdf\u5230\u6570\u636e\u5904\u7406\r\n1. \u4e22\u5f03\r\n2. \u4f7f\u7528.allowedLateness(Time.seconds(2))\u5141\u8bb8\u6570\u636e\u8fdf\u52302\u79d2(\u4f1a\u5bf9\u65f6\u95f4\u6bb5\u5185\u6570\u636e\u8fdb\u884c\u91cd\u65b0\u5904\u7406\u8017\u8d39\u5185\u5b58/\u8ba1\u7b97\u8d44\u6e90)\r\n1. \u5bf9\u8fdf\u5230\u6570\u636e\u8fdb\u884c\u7edf\u4e00\u56de\u6536.sideOutputLateData(**outputTag**) \r\n```        \r\n //\u628a\u8fdf\u5230\u7684\u6570\u636e\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u5b9e\u9645\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u5230\u5176\u4ed6\u5b58\u50a8\u4ecb\u8d28\u4e2d\r\nOutputTag<Tuple2<String, Long>> outputTag = new OutputTag<Tuple2<String, Long>>('late-data'){};\r\n\r\n.timeWindow(Time.seconds(3)).sideOutputLateData(outputTag)\r\n\r\n DataStream<Tuple2<String, Long>> sideOutput = applied.getSideOutput(outputTag);\r\n\r\n applied.print();\u3002", "top": 0, "createdAt": 1719927147, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/Flink-zhi-Keyed State.html", "labels": ["documentation"], "postTitle": "Flink\u4e4bKeyed State", "postUrl": "post/Flink-zhi-Keyed%20State.html", "postSourceUrl": "https://github.com/0or1world/0or1world.github.io/issues/12", "commentNum": 0, "wordCount": 3172, "description": "**\u6e90\u7801\u89e3\u6790**\r\n``` public class CountWindowAverage extends RichFlatMapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>> {\r\n\r\n    /**\r\n     * The ValueState handle. The first field is the count, the second field a running sum.\r\n     */\r\n    /*\r\n      ValueState \u8fd0\u884c\u65f6\u4fdd\u5b58\u5728Taskmanager\u5185\u5b58\u91cc\r\n      checkkpoint\u7684\u65f6\u5019,\u628astate\u4fdd\u5b58\u5728\u8fdc\u7aef\u6587\u4ef6\u7cfb\u7edf\u91cc\r\n      \u5f53flink\u5f00\u542fcheckkpoint\u7684\u65f6\u5019,\u9ed8\u8ba4state\u4fdd\u5b58\u5728taskmanagerd    \u7684\u5185\u5b58\u91cccheckkpoint\u4fdd\u5b58\u5728jobmanager\r\n      \u751f\u4ea7\u6a21\u5f0f,state\u4fdd\u5b58\u5728taskManager\u7684rocksdb\u6587\u4ef6\u7cfb\u7edf\u91cc,checkkpoint\u4fdd\u5b58\u5728hdfs\u91cc\r\n    */ \r\n    private transient ValueState<Tuple2<Long, Long>> sum;\r\n\r\n    @Override\r\n    public void flatMap(Tuple2<Long, Long> input, Collector<Tuple2<Long, Long>> out) throws Exception {\r\n\r\n        // sum\u53ef\u4ee5\u8bbf\u95ee\u91cc\u9762\u7684\u6570\u636e\r\n        Tuple2<Long, Long> currentSum = sum.value();\r\n\r\n        // \u5143\u7ec4\u4e0b\u68070\u7684+1\r\n        currentSum.f0 += 1;\r\n\r\n        // \u5143\u7ec4\u4e0b\u68071 = (\u4f20\u5165\u5143\u7ec4\u4e0b\u68071\u7684+1)\r\n        currentSum.f1 += input.f1;\r\n\r\n        // \u5c06Valuestate\u66f4\u65b0\u5230sum\u91cc\r\n        sum.update(currentSum);\r\n\r\n        // \u5f53currentSum.f0 >= 2\u65f6\u8f93\u51fa\u5e73\u5747\u6570\r\n        if (currentSum.f0 >= 2) {\r\n            out.collect(new Tuple2<>(input.f0, currentSum.f1 / currentSum.f0));\r\n            //\u6e05\u7a7asum\r\n           // sum.clear();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void open(Configuration config) {\r\n        ValueStateDescriptor<Tuple2<Long, Long>> descriptor =\r\n                      //\u5b9a\u4e49ValueState\u63cf\u8ff0\r\n                new ValueStateDescriptor<>(\r\n                        'average', // the state name\r\n                        TypeInformation.of(new TypeHint<Tuple2<Long, Long>>() {}), // \u7c7b\u578b\u662fTuple2\r\n                        Tuple2.of(0L, 0L)); // \u9ed8\u8ba4\u503c\r\n                  //\u901a\u8fc7\u63cf\u8ff0\u83b7\u5f97sumstate\r\n        sum = getRuntimeContext().getState(descriptor);\r\n    }\r\n}\r\n\r\n// \u4f8b\u5b50\r\n        env.enableCheckpointing(2000);\r\n\r\n\r\n\r\n// advanced options:\r\n\r\n// set mode to exactly-once (this is the default)\r\n        env.getCheckpointConfig().setCheckpointingMode(CheckpointingMode.EXACTLY_ONCE);\r\n\r\n// make sure 500 ms of progress happen between checkpoints\r\n        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(500);\r\n\r\n// checkpoints have to complete within one minute, or are discarded\r\n        env.getCheckpointConfig().setCheckpointTimeout(60000);\r\n\r\n// allow only one checkpoint to be in progress at the same time\r\n        env.getCheckpointConfig().setMaxConcurrentCheckpoints(1);\r\n\r\n// enable externalized checkpoints which are retained after job cancellation\r\n        env.getCheckpointConfig().enableExternalizedCheckpoints(CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION);\r\n\r\n        //\u65e0\u91cd\u542f\u7b56\u7565\r\n        //env.setRestartStrategy(RestartStrategies.noRestart());\r\n\r\n\r\n// allow job recovery fallback to checkpoint when there is a more recent savepoint\r\n       env.setStateBackend(new FsStateBackend('file:///C:\\\\Users\\\\19191\\\\Desktop\\\\test'));\r\n\r\nenv.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L), Tuple2.of(1L, 4L), Tuple2.of(1L, 2L))\r\n        .keyBy(0)\r\n                      //\u65b0\u5efa\r\n        .flatMap(new CountWindowAverage())\r\n        .print();\r\n\r\n// the printed output will be (1,4) and (1,5)\r\n//\u6253\u5305\u8fd0\u884c\r\nbin/flink run -c [\u5168\u9650\u5b9a\u540d]  [jar\u5305\u4f4d\u7f6e]\r\n\r\n//\u6062\u590d\r\n$ bin/flink run -s :checkpointMetaDataPath [matedata\u6587\u4ef6\u8def\u5f84] -c  [\u5168\u9650\u5b9a\u540d]  [jar\u5305\u4f4d\u7f6e]\u3002", "top": 0, "createdAt": 1719927180, "style": "", "script": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "shijie\u7684\u6280\u672f\u8bb0\u5f55", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://0or1world.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}